import Day6.parse
import Day6.run1
import Day6.run2

object Day6 {
    fun <E> List<E>.update(index: Int, e: E): List<E> =
        this.take(index) + e + this.drop(index + 1)

    data class Coordinate(val x: Int, val y: Int) {
        operator fun plus(c: Coordinate): Coordinate = Coordinate(x + c.x, y + c.y)
        fun directionChar(): Char = when(this) {
            Coordinate(-1, 0) -> '<'
            Coordinate(1, 0) -> '>'
            Coordinate(0, -1) -> '^'
            Coordinate(0, 1) -> 'v'
            else -> 'X'
        }
    }
    data class Grid<E>(val m: List<List<E>>) {
        fun width(): Int = m.first().size
        fun height(): Int = m.size

        fun get(c: Coordinate): E = m[c.y][c.x]
        fun getSafe(c: Coordinate): E? = m.getOrNull(c.y)?.getOrNull(c.x)

        fun set(c: Coordinate, value: E): Grid<E> =
            Grid(m.update(c.y, m[c.y].update(c.x, value)))

        fun allCoordinates(): List<Coordinate> =
            0.rangeUntil(height()).flatMap { y ->
                0.rangeUntil(width()).map { x ->
                    Coordinate(x, y)
                }
            }

        fun isInside(c: Coordinate): Boolean =
            c.x >= 0 && c.x < width() && c.y >= 0 && c.y < height()

        fun findAll(e: E): List<Coordinate> =
            findAll { it == e }
        fun findAll(f: (E) -> Boolean): List<Coordinate> =
            allCoordinates().filter { f(get(it)) }
    }

    val allDirections = listOf(
        Coordinate(-1, -1), Coordinate(-1, 0), Coordinate(-1, 1),
        Coordinate(0, -1), Coordinate(0, 1),
        Coordinate(1, -1), Coordinate(1, 0), Coordinate(1, 1)
    )

    fun parse(input: String): Grid<Char> =
        Grid(input.lines().filter { it.isNotBlank() }.map { it.toCharArray().toList() })

    const val free = '.'
    val visited = "X<>^v".toCharArray()
    const val obstacle = '#'

    data class Guard(val location: Coordinate, val direction: Coordinate) {
        fun turnRight(): Guard {
            val newDirection = when (direction) {
                Coordinate(0, -1) -> Coordinate(1, 0)
                Coordinate(1, 0) -> Coordinate(0, 1)
                Coordinate(0, 1) -> Coordinate(-1, 0)
                Coordinate(-1, 0) -> Coordinate(0, -1)
                else -> throw IllegalArgumentException("no diagonals")
            }
            return Guard(location, newDirection)
        }
        fun locationAhead(): Coordinate = location + direction
        fun stepForward(): Guard = Guard(location + direction, direction)
    }

    data class State(val grid: Grid<Char>, val guard: Guard) {
        fun guardHasLeft() = !grid.isInside(guard.location)
        fun isLooping(): Boolean = grid.get(guard.location) == guard.direction.directionChar()
    }

    fun oneStep(s: State): State {
        val obstacleAhead = s.grid.getSafe(s.guard.locationAhead()) == obstacle
        return if (obstacleAhead)
            State(s.grid, s.guard.turnRight())
        else
            State(
                s.grid.set(s.guard.location, s.guard.direction.directionChar()),
                s.guard.stepForward()
            )
    }

    fun initialState(input: Grid<Char>): State {
        val (guardLoc) = input.findAll('^')
        return State(
            input.set(guardLoc, free),
            Guard(guardLoc, Coordinate(0, -1))
        )
    }

    fun visitedLocations(g: Grid<Char>): Int =
        g.findAll(visited::contains).count()

    fun run1(input: Grid<Char>): Int {
        tailrec fun rec(s: State): Int =
            if (s.guardHasLeft() || s.isLooping()) {
                visitedLocations(s.grid)
            } else {
                rec(oneStep(s))
            }
        return rec(initialState(input))
    }

    fun willLoop(g: Grid<Char>): Boolean {
        tailrec fun rec(s: State, steps: Int = 0): Boolean =
            if (s.guardHasLeft()) {
                false
            } else if(s.isLooping()) {
                true
            } else if(steps > 64000) {
                true
            } else {
                rec(oneStep(s), steps + 1)
            }
        return rec(initialState(g))
    }

    fun run2(input: Grid<Char>): Int =
        input.findAll(free).count { newObstacle ->
            willLoop(input.set(newObstacle, obstacle))
        }

}

fun main() {
    val input = """
        ........#.............................................#.........#..............#.......#....................#....................#
        ......................#........#........................#.............##............................#.#.............#..........#..
        ....#..................................#..................#.........#....#..............#..#......................#........#...#..
        .....#...#...............#................#..........................#......#.....................#.......................#.......
        ......................................................##.#....#..................................................................#
        #....#....................#..................................#.....................................#......................#.......
        .......#...........................#.......................#......#...#.................................................#...#.....
        ....................##..........................#................#..........................#.#..................#....#.........#.
        #..................................#...............#...............#.........................#............##......................
        .............................#....................................#...............#.........#..........#.......................#..
        .................................#............###.......#............##......#...............................#...............#.#..
        .#..........................................#.......#.......................##..#........#........#...............#...............
        ......#...#............#.#..............#...................#..........................................................##.........
        #................##....................................................................#........#.................#...#...........
        ...#..........#..........................##......#....#..............................#......................................#.....
        ..............................##.#..........................................................#..............................#......
        ......#...........#....#..................#............#....................................................................#.....
        .....................#........................#.......................................................#...........................
        ...................#.#..........................................................................................#.#...............
        .........................................##.........................................................#.......#...###......#........
        ...............................................................##.......................#..........................#..............
        ...#...........#.................#..............#......#.....#..........................#....................#....#...............
        .................................#................#................#..............................................#.......##.....#
        ........#..........................#................#.......................#...................#.................................
        .............................#.............................#..........#.........................#........#........................
        ....#................#.#................#...........................................................#...#....#......#......#......
        ........#..............................#...............................#.................#........................................
        ...........................................#..#........#...#...........#..#.............#.........................................
        .#.................#.#................................#................#.#..................................#........#............
        .......#..........................................#.................................................................#.............
        ...................#....................................................#..#...............................................#......
        ...#.#........#...#.....#.....................................................................................................#...
        ......#.........................#......................#.............#.....................#......................................
        ..........................#............#.................................#..#..........#........#......................#..........
        ...#..#......#.......................#........................#...................................................................
        ............#...........#................#..............#.........................................................................
        .#........#....#.........................................#........................................#...............................
        ...#......................##.........#.......#.#...........#................................................#...#.................
        ...........#......#.........#....#.....#.......................................................#.............#....................
        .............#...#..............................................#.........#.....##....................#...#.........#.............
        ...............#................................#..........................................#.....#.#.........................#...#
        ................#.....#..#.............#..............#..............#.......#....................................................
        ......#.........................................................................................................#.........##......
        ..#...........................#.#...........................................#..#.....#............................................
        ...#...#..................#..................................#.........#...................#..................................#...
        ............#..#.....................#.........................................#.......#..................................#.......
        ...#.......................................................................#.............................#........................
        ......#..................#....................................#......##...........................................................
        .#...............#.....#..........................................................................................#...............
        ...#.............#.........................#.....................#...#..........#....#............................#...............
        ...#............................#.......#...........#.........#........#.....#...........#...................................#....
        .....................#...................#................................#...............................#......#.........#..##..
        .............#........................................................................................#........................##.
        .....#.......#.......#............................................................................................................
        ............................................#................................................................#..............#.....
        ....#..#......................................................#...................................................#...............
        .................................#...##..................#.................................................#....#.................
        ........#...................................#...#..........................................................#......................
        ........................#........##...........#.......#........#...................................#..............................
        ...........#...#...................................................#..............#......#...............#.#..................#...
        ........#.............................................#...........................................................................
        ........#................#......#..........#..#........#.#.......#...#........................#..#......................#.......#.
        .......#..........................................................................................................#.....#.....#...
        ......................##....................#.....#.................#...........#.......................#.##..........#......#....
        ....................................##....................................................................#.................#.....
        ..#.................................#.#...........#............................................#....#.............................
        #...................................#...........................................#............#.........#...............#..........
        .......................#.............................................................#..........#...#.............#.....#.........
        #..................#.#.............................................................................#.................#............
        .....................#......#.......#...........#..........................................^...............................#......
        ................................#......................#.#.....#..............#..................#....#.#......#....#.............
        ............................................................................#........#.....................................#......
        .............#......................................................#...................................#......##..#....#.........
        ...............#.................#...................#...............#............................................................
        ..............#...........#..#...........................................#...................................#..........#.........
        ..........#...........................#...................#..............#...#.......#..........#...................#.............
        .............#.#..................................#....#..#............#.....................#................#...#.....#.........
        ...................#..........................................................#............##.....................................
        ...........................................#............#........................................................................#
        ..#..............................#....#...........................................................................................
        ..#..#............#...........................#...#...........#............#.....#.................#..............................
        ....#...................#.........#...............................................................................................
        .......#..........................#....................................##........#.................##...#.#........#..#...........
        .#........................#....#.......#.....#...................#.............................................#..................
        ..#...............................................................#................................................#..............
        .....#........................................#...................................................................................
        ..........................................#..........................................................#............................
        ....................###.........................#............................#...#...........#............#.......................
        .....#.....#...............#........#.#....#...................#...........#........#...........#.................................
        ................................................................................................#...##............................
        ......................#............#.........................#.......................#.....#...........#...#.#....................
        ............................#....................#..................#..............#..................................#...........
        ...........................#...................................#..............................................................#...
        ..................#................#.....................#...................#........#..............#............................
        ............#.............#.....................#..................#.........#......................#............#............#...
        ....#..........................#...............................................................................................#..
        ................#.....................................#.............................#...........#........................#........
        #.##...........#.........................................#...............#..........................................#.#...........
        ........................................#..............#.....................#............#.....#.................................
        .......#....##..#..#.....#........................................................................................................
        ....##.............#..............................#...............................................................................
        .....#........................#.........#..#......#........#......................#.......#..............#..........#.......#.....
        ..#....#.........................#.#....................#..#.......#.............#..................#........#..................#.
        ..........##....#........................................................................#........................................
        ........#......#................................................................................................#................#
        .....#.......#...#.............#....................................#..#........................#...#..............#....#.........
        .............#...................................................##...#...........................................................
        ..............#.............................................#.............#................#.............#..............#.........
        ..#....#..........#.....#......#......................#................................#...............................#..........
        .................................................................................##......#...........................#.....#......
        ..#....#..........#.......#.........................................#...............#..#............................#........#....
        ...........#........#.#....................#........#.....................................#..................#....................
        .......#............#................#...........#.............#......#.........#...........................#.....................
        #.#....#.#...............#....#.....#.......................#...............................#...................##...#............
        .................##...#.................................................................#...........................#.............
        .....#........................................#.........#...................................................#.....................
        ....................#.....................#................................................#...##.....................#...........
        ...............#...............................................................#....#.............................................
        .................#................#...#.....................................#......#....................#...............#.#.......
        ...................#............................................#..#....#..#........#...............................#.........#...
        ..#........#...............#..................#.....#..................#.....................................#........##...#......
        .....#.....#....#.....#................#.#.....................##.............................................................#...
        ................#............#......#......#.......................................................#....................#........#
        ........#..............#..#......................................................................##.....##........................
        .........#.............................#.........#.......................................#..........................#.##..........
        .#...................#........................................................#....#......................................#.......
        ....#..........#.....#.........................................................................................#..................
        .......#.............................#............#.........................#....#....#........#......#.....#.......#.............
        ..#.......#........................#........................#.....................................................................
        ........................#...............................#.#.............#................................#..................#.....
    """.trimIndent()
    val parsed = parse(input)
    println(run1(parsed))
    println(run2(parsed))
}
